<?xml version="1.0" encoding="UTF-8"?>
<!-- Plato: Executable Plan
      Version: 0.1
 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://ifs.tuwien.ac.at/dp/plato" xmlns:tav="http://taverna.sf.net/2008/xml/t2flow" targetNamespace="http://ifs.tuwien.ac.at/dp/plato" elementFormDefault="qualified" version="1.0">
	<xs:import namespace="http://taverna.sf.net/2008/xml/t2flow" schemaLocation="t2flow.xsd"/>
	<xs:element name="preservationActionPlan" type="PreservationActionPlan"/>
	<xs:complexType name="PreservationActionPlan">
		<xs:annotation>
			<xs:documentation>
				Describes a preservation action plan: 
				* Identifies the collection it was created for, 
				* the objects it should be applied to, and 
				* the executable plan itself.
				TBD: 
				* More information on the preservation plan? 
				* describe when the plan has to be applied (on ingest, to existing objects...)
				* service level specifications (QA, performance,...)
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="collection" type="Collection"/>
			<xs:element name="objects" type="Objects"/>
			<xs:element name="executablePlan" type="ExecutablePlan"/>
		</xs:sequence>
		<xs:attribute name="schemaVersion" type="Version1" />
	</xs:complexType>
	<xs:complexType name="Collection">
		<xs:annotation>
			<xs:documentation> Identifies the collection this action plan should be applied to. </xs:documentation>
		</xs:annotation>
		<xs:sequence/>
		<xs:attribute name="uid" type="xs:string" use="required"/>
		<xs:attribute name="name" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="Objects">
		<xs:annotation>
			<xs:documentation> Defines the objects this action plan should be applied to. At the moment this is done explicit, by a list of objects, later they can also be defined by a query. </xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:sequence>
				<xs:element name="object" type="Object" maxOccurs="unbounded"/>
			</xs:sequence>
			<!-- 
		<xs:element name="query" type="ObjectQuery"/>
        -->
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="Object">
		<xs:sequence/>
		<xs:attribute name="uid" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="ExecutablePlan">
		<xs:annotation>
			<xs:documentation> The executable plan itself, which can be applied to objects. </xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="tav:workflow">
				<xs:annotation>
					<xs:documentation>
						A taverna workflow adhering to a common interface:
						input ports:  input_reference - a reference to the object to be migrated
						output ports: output_reference - a reference to the migrated object
										   additional output ports for measured criteria, e.g.: action.efficiency.timeBehaviour.timePerSample
						TBD: interface for migrations from/to multiple objects  (1 - n, m - 1, m - n) e.g. multipage pdf to tiffs
				</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="type" type="ExecutablePlanType"/>
	</xs:complexType>
	<xs:simpleType name="ExecutablePlanType">
		<xs:annotation>
			<xs:documentation>The type of the executable plan, at the moment only taverna workflows are supported</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="t2flow"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Version1">
		<xs:annotation>
			<xs:documentation>Version of preservation action plan covered by this schema -
				restricted to "1" or "1.x" - for instance "1.2" would be allowed.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="1(|\..*)"/>
		</xs:restriction>
	</xs:simpleType>	
</xs:schema>
