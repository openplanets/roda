#!/bin/bash

### BEGIN INIT INFO
# Provides:          tomcat6
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Tomcat.
# Description:       Start the Tomcat servlet engine.
### END INIT INFO

################################################################################
# Change to the directory where the script is so we can read the configurations
################################################################################
cd $(dirname $(readlink -m $0))

################################################################################
# Source tomcat config file (or exit if not able to do so)
################################################################################
if [ -f tomcat.config ]; then
   . ./tomcat.config
   . $SET_RODA_ENV_SCRIPT
   TOMCAT_HOME="${RODA_HOME%/}/$TOMCAT_RELATIVE_PATH_TO_RODA_HOME"
   TOMCAT_PIDFILE="${TOMCAT_HOME%/}/pid/tomcat.pid"
else
	echo "Cannot source Tomcat config file ($PWD/tomcat.config)."
	exit 1
fi


################################################################################
# Define variables
################################################################################
umask 077
START_TOMCAT=$TOMCAT_HOME/bin/startup.sh
STOP_TOMCAT=$TOMCAT_HOME/bin/shutdown.sh
JAVA_OPTS="$JAVA_OPTS -Droda.home=$RODA_HOME -Dfedora.home=$FEDORA_HOME"
if [ "$USER" = "$RUN_SERVLET_CONTAINER_AS" ]; then
   SUBIT=""
else
   SUBIT="su - $RUN_SERVLET_CONTAINER_AS -c "
fi


################################################################################
# Check if start/stop scripts exist
################################################################################
[ -f $START_TOMCAT ] || exit 2
[ -f $STOP_TOMCAT ] || exit 3


################################################################################
# Check if the directory where the pid file is going to be saved exist
################################################################################
TOMCAT_PID_DIR=$(dirname $(readlink -m $TOMCAT_PIDFILE))
if [ ! -d $TOMCAT_PID_DIR ]; then
	if [ ! -z "$SUBIT" ]; then
      $SUBIT "mkdir -p $TOMCAT_PID_DIR"
   else
      mkdir -p $TOMCAT_PID_DIR
   fi
fi


################################################################################
# Functions
################################################################################
info(){
   echo "[INFO] $1"
}

debug(){
   echo "[DEBUG] $1"
}

status() {
   RUNNING_PID=0
   if [ -f $TOMCAT_PIDFILE -a -s $TOMCAT_PIDFILE ]; then
      TMP_PID=$(cat $TOMCAT_PIDFILE)
      TMP_PID_CHECK=$(ps -p $TMP_PID -o pid=)
      if [ "$TMP_PID_CHECK" != "" ]; then
         RUNNING_PID=$TMP_PID
         return 0  # running
      else
         return 1  # stopped, but pid file exists 
      fi
   fi
   return 3 # stopped
}

start() {
	status
   if [ $? -eq 0 ]; then
      echo "Tomcat (pid $RUNNING_PID) is already running. Aborting."
      exit 4 
   fi
   info "Starting Tomcat Java server: "
	if [ ! -z "$SUBIT" ]; then
      $SUBIT "export JAVA_OPTS=\"$JAVA_OPTS\"; $START_TOMCAT"
   else
      $START_TOMCAT
   fi
   info "Sleeping 3 seconds..."
   sleep 3
   pgrep -f org.apache.catalina.startup.Bootstrap > $TOMCAT_PIDFILE
	if [ ! -z "$SUBIT" ]; then
      chown $RUN_SERVLET_CONTAINER_AS $TOMCAT_PIDFILE
   fi
}

stop() {
   info "Shutting down Tomcat Java server: "
	status
   if [ $? -ne 0 ]; then
      echo "Nothing to stop, Tomcat is not running. Aborting."
      exit 5 
   fi
	if [ ! -z "$SUBIT" ]; then
      $SUBIT "$STOP_TOMCAT"
   else
      $STOP_TOMCAT
   fi
	RUNNING_PID=1
	COUNT=0
	MAX=10
   while [ "$RUNNING_PID" -ne "0" ]; 
   do
		((COUNT++))
      sleep 1
      status
      echo -n .
		if [ "$COUNT" -ge "$MAX" ]; then
			break
		fi
   done
	echo
	status
   if [ "$?" -eq "0" ]; then
   	if [ "$(ps -p $RUNNING_PID -o comm= 2>/dev/null | wc -l)" -gt "0" ]; then
      	info "Sleeping 5 seconds..."
	      sleep 5
   		if [ "$(ps -p $RUNNING_PID -o comm= 2>/dev/null| wc -l)" -gt "0" ]; then
         	info "Sleeping 10 seconds..."
	         sleep 10
   	      if [ "$(ps -p $RUNNING_PID -o comm= 2>/dev/null| wc -l)" -gt "0" ]; then
      	      info "Killing process with pid $RUNNING_PID"
         	   kill -9 $RUNNING_PID
	         fi
   	   fi
		fi
   fi
   rm -f $TOMCAT_PIDFILE
}

restart() {
	status
   stop
   start
}


################################################################################
# Real deal: let's decide what to do
################################################################################
case "$1" in
   start)
      start
      ;;
   stop)
      stop
      ;;
   restart|reload)
      restart
      ;;
	status)
      status
      RET=$?
      if [ $RET -eq 0 ]; then
         echo "Tomcat (pid $RUNNING_PID) is running..."
      elif [ $RET -eq 1 ]; then
         echo "Tomcat is dead but pidfile ($TOMCAT_PIDFILE) exists..."
      else
         echo "Tomcat is stopped."
      fi
		;;
   *)
      echo "Usage: $0 {start|stop|restart|status}"
      exit 6
esac

exit $?
